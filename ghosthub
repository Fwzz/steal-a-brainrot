local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local infiniteJumpEnabled = false
local espEnabled = false
local antiRagdollEnabled = false
local godModeEnabled = false

local espLoop
local godLoop

local screenGui, openButton, mainFrame, exitButton

-- Infinite Jump
UserInputService.JumpRequest:Connect(function()
	if infiniteJumpEnabled and humanoid then
		humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)

-- GOD MODE: Prote√ß√£o real
local function startGodMode()
	if godLoop then godLoop:Disconnect() end

	godLoop = RunService.Heartbeat:Connect(function()
		if humanoid and godModeEnabled then
			if humanoid.Health < humanoid.MaxHealth then
				humanoid.Health = humanoid.MaxHealth
			end
		end
	end)

	-- Barreira prote√ß√£o
	for _, part in pairs(workspace:GetDescendants()) do
		if part:IsA("BasePart") and (part.Name:lower():find("lava") or part.Name:lower():find("barreira") or part.Name:lower():find("damage")) then
			part.Touched:Connect(function(hit)
				if godModeEnabled and hit.Parent == character then
					humanoid.Health = humanoid.MaxHealth
				end
			end)
		end
	end
end

local function stopGodMode()
	if godLoop then godLoop:Disconnect() end
end

-- GUI Setup
local function setupGui()
	if screenGui then screenGui:Destroy() end

	screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	screenGui.Name = "HackGUI"
	screenGui.ResetOnSpawn = false

	openButton = Instance.new("TextButton", screenGui)
	openButton.Text = "üìÇ"
	openButton.Size = UDim2.new(0, 30, 0, 30)
	openButton.Position = UDim2.new(0, 10, 0.5, -15)
	openButton.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
	openButton.TextColor3 = Color3.new(1, 1, 1)
	openButton.TextScaled = true
	openButton.BorderSizePixel = 0
	Instance.new("UICorner", openButton).CornerRadius = UDim.new(1,0)

	mainFrame = Instance.new("Frame", screenGui)
	mainFrame.Size = UDim2.new(0, 280, 0, 270)
	mainFrame.Position = UDim2.new(0.5, -140, 0.5, -135)
	mainFrame.BackgroundColor3 = Color3.fromRGB(15, 20, 60)
	mainFrame.Visible = false
	mainFrame.Active = true
	mainFrame.Draggable = true

	local stroke = Instance.new("UIStroke", mainFrame)
	stroke.Color = Color3.fromRGB(100, 150, 255)
	stroke.Thickness = 3

	local corner = Instance.new("UICorner", mainFrame)
	corner.CornerRadius = UDim.new(0, 12)

	-- Drag Mobile
	local dragging, dragInput, dragStart, startPos

	local function update(input)
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end

	mainFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	mainFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)

	exitButton = Instance.new("TextButton", screenGui)
	exitButton.Size = UDim2.new(0, 100, 0, 30)
	exitButton.Position = UDim2.new(0.5, -50, 0, 10)
	exitButton.Text = "‚ùå SAIR"
	exitButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
	exitButton.TextColor3 = Color3.new(1, 1, 1)
	exitButton.BorderSizePixel = 0
	Instance.new("UICorner", exitButton).CornerRadius = UDim.new(1,0)
	exitButton.MouseButton1Click:Connect(function()
		game:Shutdown()
	end)

	openButton.MouseButton1Click:Connect(function()
		mainFrame.Visible = not mainFrame.Visible
	end)
end

-- Toggle Factory com Anima√ß√£o
local function createToggle(name, emoji, posY, getActive, setActive)
	local container = Instance.new("Frame", mainFrame)
	container.Size = UDim2.new(1, -20, 0, 40)
	container.Position = UDim2.new(0, 10, 0, posY)
	container.BackgroundTransparency = 1

	local label = Instance.new("TextLabel", container)
	label.Size = UDim2.new(1, -40, 1, 0)
	label.Position = UDim2.new(0, 0, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = emoji .. " " .. name
	label.TextColor3 = Color3.new(1, 1, 1)
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.SourceSansBold
	label.TextScaled = true

	local circle = Instance.new("TextButton", container)
	circle.Size = UDim2.new(0, 30, 0, 30)
	circle.Position = UDim2.new(1, -40, 0.5, -15)
	circle.BackgroundColor3 = getActive() and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
	circle.Text = ""
	circle.BorderSizePixel = 0
	Instance.new("UICorner", circle).CornerRadius = UDim.new(1, 0)

	-- Clique com anima√ß√£o
	circle.MouseButton1Click:Connect(function()
		local active = not getActive()
		setActive(active)
		circle.BackgroundColor3 = active and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

		-- Anima√ß√£o: Scale + cor piscada
		local tween = TweenService:Create(circle, TweenInfo.new(0.15), {
			Size = UDim2.new(0, 36, 0, 36)
		})
		local back = TweenService:Create(circle, TweenInfo.new(0.15), {
			Size = UDim2.new(0, 30, 0, 30)
		})
		tween:Play()
		tween.Completed:Wait()
		back:Play()
	end)
end

-- ESP
local function clearESP()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr.Character and plr.Character:FindFirstChild("Head") then
			local tag = plr.Character.Head:FindFirstChild("NameTag")
			if tag then tag:Destroy() end
		end
	end
end

local function toggleESP(active)
	espEnabled = active
	if active then
		local function createESP()
			for _, plr in pairs(Players:GetPlayers()) do
				if plr ~= player and plr.Character and plr.Character:FindFirstChild("Head") then
					local head = plr.Character.Head
					if not head:FindFirstChild("NameTag") then
						local gui = Instance.new("BillboardGui", head)
						gui.Name = "NameTag"
						gui.Size = UDim2.new(0, 100, 0, 20)
						gui.StudsOffset = Vector3.new(0, 2, 0)
						gui.AlwaysOnTop = true
						local label = Instance.new("TextLabel", gui)
						label.Size = UDim2.new(1, 0, 1, 0)
						label.BackgroundTransparency = 1
						label.Text = plr.Name
						label.TextColor3 = Color3.fromRGB(255, 0, 0)
						label.TextScaled = true
					end
				end
			end
		end

		createESP()
		if espLoop then espLoop:Disconnect() end
		espLoop = RunService.Stepped:Connect(function()
			if espEnabled then createESP() end
		end)
	else
		if espLoop then espLoop:Disconnect() end
		clearESP()
	end
end

-- Setup Character
local function setupCharacter(char)
	character = char
	humanoid = char:WaitForChild("Humanoid")

	if godModeEnabled then startGodMode() else stopGodMode() end

	if antiRagdollEnabled then
		character.ChildAdded:Connect(function(child)
			if child:IsA("BodyVelocity") or child.Name:lower():match("ragdoll") then
				child:Destroy()
			end
		end)
	end

	if espEnabled then toggleESP(true) end
end

-- GUI Inicial
setupGui()
createToggle("Pulo Infinito", "‚ôæÔ∏è", 10, function() return infiniteJumpEnabled end, function(v) infiniteJumpEnabled = v end)
createToggle("Anti-Ragdoll", "üí§", 60, function() return antiRagdollEnabled end, function(v) antiRagdollEnabled = v end)
createToggle("ESP Players", "üëÄ", 110, function() return espEnabled end, toggleESP)
createToggle("God Mode", "‚ö°", 160, function() return godModeEnabled end, function(v)
	godModeEnabled = v
	if v then startGodMode() else stopGodMode() end
end)

setupCharacter(character)
player.CharacterAdded:Connect(setupCharacter)
